openapi: 3.0.0
info:
  version: 1.0.0
  title: ft_transcendence API
  description: API Document for ft_transcendence
servers:
  - url: "http://localhost:3001"

tags:
  - name: health
    description: ヘルスチェック
  - name: user
    description: ユーザー
  - name: chatRoom
    description: チャットルーム
  - name:  chat-mute-user
    description: チャット機能でのミュートユーザ情報
  - name: chatRoomMembers
    description: チャットルームの参加者情報

paths:
  /health:
    get:
      tags: 
        - health
      summary: Health check
      description: ヘルスチェック
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/health'

  /user:
    post:
      tags:
        - user
      summary: user
      description: ユーザーの作成
      requestBody:
        description: create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_create_req'
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_create_res'

  /user/users:
    get:
      tags:
        - user
      summary: 全ユーザーの取得
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_get_res'


  /user/{userID}:
    get:
      tags:
        - user
      summary: get user by ID
      description: IDを指定してuser情報を取得
      parameters:
        - name: userID
          required: true
          description: id
          in: path
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_get_res'
    delete:
      tags:
        - user
      summary: delete user
      parameters:
        - name: userID
          required: true
          description: id
          in: path
          schema:
            type: integer
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
                example: OK
    post:
      tags:
        - user
      summary: update user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#components/schemas/user_update_req'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_get_res'

  /user/friends/{userID}:
    get:
      tags:
        - user
      summary: get friends
      description: パラメータ(userID)のフレンドを取得
      parameters:
        - name: userID
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/friends_get_res'

  /user/friends:
    post:
      tags:
        - user
      summary: request or accept friendship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/friends_post_req'
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/friends_post_req'

  /user/friends/pending/{userID}:
    get:
      tags:
        - user
      summary: get pending list
      description: パラメータ(userID)のフレンド待機リストを取得
      parameters:
        - name: userID
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/friends_get_res'

  /chatroom:
    get:
      tags:
        - chatRoom
      summary: get chatRoom List
      description: chatRoom情報の一覧を取得
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chat_room_res'
    post:
      summary: get chatRoom
      tags:
        - chatRoom
      description: chatRoom情報を新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chat_room_req'
      responses:
        201:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chat_room_res'

  /chatroom/{roomId}:
    delete:
      tags:
        - chatRoom
      summary: delete chatRoom
      description: chatRoom情報を削除
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chat_room_res'
  /chatroom/auth:
    post:
      tags:
        - chatRoom
      summary: auth protected chatRoom
      description: chatRoomへのパスワード認証
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chat_room_auth_req'
      responses:
        201:
          description: 成功
        401:
          description: 認証失敗
  /chat-mute-user:
    get:
      tags:
        - chat-mute-user
      summary: get chat-mute-user
      description: チャット機能でのミュートユーザ情報一覧を取得
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chat-mute-user'
    post:
      summary: update mute
      tags:
        - chat-mute-user
      description: チャット機能でのミュートユーザ情報を更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chat-mute-user'
      responses:
        201:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chat-mute-user'
    delete:
      summary: update mute
      tags:
        - chat-mute-user
      description: チャット機能でのミュートユーザ情報を削除
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chat-mute-user-pk'
      responses:
        200:
          description: 成功
  /chat-mute-user/{muteUserId}:
    get:
      tags:
        - chat-mute-user
      summary: get mute for the specified user
      description: チャット機能でのミュートユーザ情報の取得
      parameters:
        - in: path
          name: muteUserId
          required: true
          schema:
            type: number
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chat-mute-user'
  /chatRoomMembers:
    get:
      tags:
        - chatRoomMembers
      summary: get chatRoomMembers
      description: チャット機能でのルームの参加者情報を取得
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chatRoomMember'
    post:
      summary: update chatRoomMembers
      tags:
        - chatRoomMembers
      description: チャット機能でのルームの参加者情報を更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chatRoomMember'
      responses:
        201:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chatRoomMember'
    delete:
      summary: delete chatRoomMembers
      tags:
        - chatRoomMembers
      description: チャット機能でのルームの参加者情報を削除
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chatRoomMemberPK'
      responses:
        200:
          description: 成功
components:
  schemas:
    health:
      type: object
      properties:
        health:
          type: string
          example: OK

    user_create_req:
      type: object
      properties:
        name:
          type: string
          example: Tom Brady
        password:
          type: string
          example: password

    user_create_res:
      type: object
      properties:
        id:
          type: integer
          example: 1

    user_update_req:
      type: object
      properties:
        name:
          type: string
          example: Updated!!!
        password:
          type: string
          example: update

    users_get_res:
      type: array
      items:
        $ref: '#/components/schemas/user_get_res'

    user_get_res:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Tom Brady
  
    friends_get_res:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Nick Foles
    
    friends_post_req:
      type: object
      properties:
        from:
          type: integer
          example: 1
        to:
          type: integer
          example: 2

    chat_room_res:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Tom Brady
        created_by_user_id:
          type: number
          example: 1
        public_id:
          type: number
          example: 1
    chat_room_req:
      type: object
      properties:
        name:
          type: string
          example: Tom Brady
        created_by_user_id:
          type: number
          example: 1
        public_id:
          type: number
          example: 1
    chat_room_auth_req:
      type: object
      properties:
        id:
          type: integer
          example: 1
        password:
          type: string
          example: "password"
    chat-mute-user:
      type: object
      properties:
        muteUserId:
          type: number
          example: 1
        mutedUserId:
          type: number
          example: 2
        mute_until:
          type: string
          example: "2024-01-31T14:59:00.000Z"
    chat-mute-user-pk:
      type: object
      properties:
        muteUserId:
          type: number
          example: 1
        mutedUserId:
          type: number
          example: 2
    chatRoomMember:
      type: object
      properties:
        chatRoomId:
          type: number
          example: 1
        userId:
          type: number
          example: 1
        isBanned:
          type: boolean
          example: false
        isAdministrator:
          type: boolean
          example: false
    chatRoomMemberPK:
      type: object
      properties:
        chatRoomId:
          type: number
          example: 1
        userId:
          type: number
          example: 1
